kind: pipeline
type: docker
name: build

steps:
- name: lint
  image: golang:1.13-alpine
  commands:
  - go get golang.org/x/lint/golint
  - test -z $(gofmt -l .)
  - golint -set_exit_status ./...

- name: prepare and build
  image: golang:1.13-alpine
  commands:
  - go get github.com/mitchellh/gox
  - go get -v -d ./...
  - mkdir -p dist
  - arch=$(go tool dist list | 
    tr -d "android/386" | \
    tr -d "android/arm" | \
    tr -d "android/arm64" | \
    tr -d "darwin/arm" | \
    tr -d "darwin/arm64" | \
    tr -d "nacl/arm" | \
    tr -d "nacl/amd64p32" | \
    tr "\n" " " | xargs)
  - gox -parallel=16 -osarch="$arch" -output="dist/{{.Dir}}_{{.OS}}_{{.Arch}}" -ldflags "-s -w" ./...
  environment:
    CGO_ENABLED: 0

- name: release binaries
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    files: dist/*
  when:
    event: tag
